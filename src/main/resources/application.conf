epmsmail {
    mail {
        inbox = "./inbox"
        edanet.at {
            interval = 30 minutes
            javaxmail {
                mail {
                    store.protocol = "imap"
                    imap {
                        starttls.enable = true
                    }
                    smtp {
                        starttls.enable = true
                        auth = true
                    }
                }
            }
        }
        gmail.com {
            docMode = "SIMU"
            interval = 30 minutes
            javaxmail {
                mail {
#                     debug = true
                    store.protocol = "imap"
                    imap {
                        ssl.enable = true
                        host = "imap.gmail.com"
                        starttls.enable = true
                    }
                    smtp {
                        host = "smtp.gmail.com"
                        starttls.enable = true
                        auth = true
                    }
                }
            }
        }
    }
    mqtt {
        url = "tcp://localhost:1883"
        topic = "eda/request"
        qos = 1
        consumer-id = "edash-mqtt-client"
        topics {
            energyTopic = "eda/response/energy"
            cmTopic = "eda/response/cm"
            cpTopic = "eda/response/cp"
            errorTopic = "eda/response/error"
        }
    }

    admin {
        javaxmail {
            mail {
                smtp {
                    host = postal.meinmx.at
                    port = 25
                    starttls.enable = true
                    auth = true
                }
            }
        }
        authenticator {
            username = postal-meinmx-at
            password = KPNLxjdOjfRyoaC2AH2xzMRr
        }
    }
}

slick.pgsql.local {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  driver = "slick.driver.PostgresDriver$"
  db {
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:6432/postgresDB"
    user="postgresUser"
    password="postgresPW"
    queueSize=5000
    connectionTimeout=30000
    maxConnections=8
    minConnections=2
    numThreads=8
  }
}

logger.scala.slick.jdbc.JdbcBackend.statement=INFO
logging.level.com.zaxxer.hikari.HikariConfig=INFO
logging.level.com.zaxxer.hikari=INFO

# slick.pgsql.local.profile = "slick.driver.PostgresDriver"
#
# slick.driver.PostgresDriver = {
#       connectionPool = "HikariCP" //use HikariCP for our connection pool
#       dataSourceClass = "org.postgresql.ds.PGSimpleDataSource" //Simple datasource with no connection pooling. The connection pool has already been specified with HikariCP.
#       properties = {
#         serverName = "localhost"
#         portNumber = "6432"
#         databaseName = "postgresDB"
#         user = "postgresUser"
#         password = "postgresPW"
#       }
#       numThreads = 10
# }

akka {
  logger.scala.slick = "INFO"
  loglevel = "INFO"
  persistence.journal.plugin = "akka.persistence.journal.leveldb"
  persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"

  persistence.journal.leveldb.dir = "storage/prod/journal"
  persistence.snapshot-store.local.dir = "storage/prod/snapshots"

  akka.persistence.journal.leveldb.native = false

#   http.server.enable-http2 = on
  http.server.preview.enable-http2 = on

  actor {
    serialization-bindings {
      "at.energydash.actor.CborSerializable" = jackson-cbor
    }
  }
}