epmsmail {
    mail {
        inbox = "./inbox"
        myeeg {
            domain = ${?EMAIL_DOMAIN}
            javaxmail {
                mail {
                    store.protocol = "imaps"
                    imap {
                        ssl.enable = true
                        port = ${IMAP_EMAIL_PORT}
                        host = ${IMAP_SERVER_HOST}
                        ssl.trust = ${?IMAP_SERVER_HOST}
                        starttls.enable = true
                    }
                    smtp {
                        host = ${?SMTP_SERVER_HOST}
                        port = ${?SMTP_EMAIL_PORT}
                    }
                }
            }
            authenticator {
                username = ${?EMAIL_USER}
                password = ${?EMAIL_PASSWORD}
            }
        }
    }
    mqtt {
        url = "tcp://localhost:1883"
        topic = "eda/request"
        qos = 1
        consumer-id = "edash-mqtt-client"
        topics {
            energyTopic = "eda/response/energy"
            cmTopic = "eda/response/cm"
            cpTopic = "eda/response/cp"
        }
    }
}

akka {
  loglevel = "INFO"
  persistence.journal.plugin = "akka.persistence.journal.leveldb"
  actor {
    serialization-bindings {
      "at.energydash.actor.CborSerializable" = jackson-cbor
    }
  }
  quartz {
#     defaultTimezone = "Asia/Bangkok"
    schedules {
      Every3hours {
        description = "A cron job that fires off every 3 hours"
        expression = "0 0 */3 * * ? *"
      }
      Every1Minute {
        description = "A cron job run every 1 minute"
        expression = "0 */10 * * * ? *"
      }
      Every10Seconds {
        description = "A cron job run every 10 second"
        expression = "*/10 * * * * ? *"
      }
      Notify {
        description = "Notify cron job"
        expression = "0 0 9,12,18,23 * * ? *"
        expression = ${?CRYPTO_NOTIFY_NOTIFY_CRON}
      }
      HealthCheck {
        description = "HealthCheck cron job"
        expression = "0 */30 * * * ? *"
        expression = ${?CRYPTO_NOTIFY_HEALTHCHECK_CRON}
      }
    }
  }
}